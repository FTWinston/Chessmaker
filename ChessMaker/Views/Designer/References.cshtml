@model ChessMaker.Models.CellReferencesModel

@{
    ViewBag.Title = "'" + Model.VariantName + "' cell references";
    ViewBag.MinimalLayout = true;
}

<div id="main">
    @Html.Raw(Model.SvgData)
</div>

<div id="sidebar">
    <div id="absDirs" class="section ui-widget ui-corner-all">
        <h3>Cell References</h3>

        Click on cells to name
        <div>
            @Html.RadioButton("rbMode", "single", true, new { id = "rbSingle" })
            @Html.Label("rbSingle", "only that cell", new { @class = "radio" })
        </div>
        <div>
            @Html.RadioButton("rbMode", "bulk", false, new { id = "rbBulk" })
            @Html.Label("rbBulk", "multiple cells", new { @class = "radio" })
        </div>
    </div>
</div>

<div id="singleRename" class="popup" title="Rename selected cell">
    <label for="txtName">Name</label>
    <input type="text" id="txtName" class="text ui-widget-content" />
</div>

<div id="bulkRename" class="popup bulk" title="Auto-name cells">
    <div class="blurb">From the selected cell...</div>
    
    <div id="bulkLeft">
        <div>
            <label for="bulkDir1">moving</label>
            <select id="bulkDir1" class="ui-widget-content">
                @foreach (var dir in @Model.AllDirs)
                {
                    @:<option>@dir</option>
                }
            </select>
        </div>
        <div>
            <select id="bulkDir1Mode" class="ui-widget-content">
                <option selected="selected" value="1">increment</option>
                <option value="-1">decrement</option>
            </select>

            <select id="bulkDir1Type" class="ui-widget-content updateExample">
                <option value="A" selected="selected">uppercase letter</option>
                <option value="a">lowercase letter</option>
                <option value="1">number</option>
            </select>
        </div>
        <div>
            <label for="bulkDir1Start">starting at</label>
            <input type="text" id="bulkDir1Start" class="ui-widget-content updateExample" value="A" />
        </div>

        <hr/>

        <div>
            <label for="bulkDir2">moving</label>
            <select id="bulkDir2" class="ui-widget-content">
                @foreach (var dir in @Model.AllDirs)
                {
                    @:<option>@dir</option>
                }
            </select>
        </div>
        <div>
            <select id="bulkDir2Mode" class="ui-widget-content">
                <option selected="selected" value="1">increment</option>
                <option value="-1">decrement</option>
            </select>

            <select id="bulkDir2Type" class="ui-widget-content updateExample">
                <option value="A" selected="selected">uppercase letter</option>
                <option value="a">lowercase letter</option>
                <option value="1">number</option>
            </select>
        </div>
        <div>
            <label for="bulkDir2Start">starting at</label>
            <input type="text" id="bulkDir2Start" class="ui-widget-content updateExample" value="A" />
        </div>
    </div>
    <div id="bulkRight">
        <div>
            <label for="bulkDirPrefix">prefix</label>
            <input type="text" id="bulkDirPrefix" class="ui-widget-content updateExample" />
        </div>
        <div>
            <label for="bulkDirMiddle">middle</label>
            <input type="text" id="bulkDirMiddle" class="ui-widget-content updateExample" />
        </div>
        <div>
            <label for="bulkDirSuffix">suffix</label>
            <input type="text" id="bulkDirSuffix" class="ui-widget-content updateExample" />
        </div>

        <hr />
        example: <span id="bulkExample">A1</span>
    </div>
</div>

@Html.Hidden("linkData", Model.LinkData, new { id = "linkData" })

@using (Html.BeginForm("References", "Designer", FormMethod.Post, new { id = "refsForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    @Html.Hidden("renameData", "", new { id = "renameData" })

    <input type="submit" name="next" id="submitPrev" value="prev" />
    <input type="submit" name="next" id="submitCurrent" value="this" />
    <input type="submit" name="next" id="submitNext" value="next" />
    <input type="submit" name="next" id="submitDone" value="done" />
}

@section actions {
    @if (Model.PrevPage != null)
    {
        <button onclick="$('#submitPrev').click();" title="@Model.PrevPageTooltip">&lt; @Model.PrevPage</button>
    }
    <button onclick="$('#submitCurrent').click();" title="save your changes, staying on the current page" class="current">@Model.ThisPage</button>
    @if (Model.NextPage != null)
    {
        <button onclick="$('#submitNext').click();" title="@Model.NextPageTooltip">@Model.NextPage &gt;</button>
    }
    <button onclick="location.reload();" id="btnReset" title="reload the current page, resetting your changes">Reset</button>
    <button onclick="$('#submitDone').click();" title="save changes and exit variant designer">Close</button>
}

@section css {
    @Styles.Render("~/Content/themes/base/css", "~/Content/designer/base.css", "~/Content/designer/references.css")
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryui", "~/Scripts/designer/base.js", "~/Scripts/designer/references.js")
}