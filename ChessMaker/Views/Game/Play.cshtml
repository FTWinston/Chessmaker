@model ChessMaker.Models.GamePlayModel

@{
    ViewBag.Title = Model.Mode + " game: " + Model.Name;
    ViewBag.MinimalLayout = true;
}

<div id="main">

</div>

<div id="sidebar">
    <div class="section ui-widget ui-corner-all">
        <h3 id="nextMove">Initializing</h3>
        <div id="wait">Please wait...</div>
        <div id="moveHistory" class="sideList"></div>
    </div>
    <div id="captureSection" class="section ui-widget ui-corner-all">
        <h3>Captured</h3>
        <svg id="captured" viewBox="0 0 196 200" class="pieceList sideList"></svg>
    </div>
    <div id="heldSection" class="section ui-widget ui-corner-all">
        <h3>Held</h3>
        <svg id="held" viewBox="0 0 196 200" class="pieceList sideList"></svg>
    </div>
</div>

@section css {
    @Styles.Render("~/Content/Game.css")
    @Styles.Render("~/Users/Theme")
}

@section scripts {
    @Scripts.Render("~/bundles/game")
    
  <script type="text/javascript">
    initializeGame(
        "@Url.Content("~/Scripts/Game/Worker.js")",
        "@(Model.Version.HasValue ? Url.Action("Definition", new { id = Model.Tag, version = Model.Version.Value }) : Url.Action("Definition", new { id = Model.Tag }))",
        [
            @(Model.Players[0].IsAI ? (Model.Players[0] as ChessMaker.Models.AIDifficultyModel).InternalName : Model.Players[0].IsLocal ? "true" : "false")
            @for (var i = 1; i < Model.Players.Length; i++) {
                @:, @Html.Raw(Model.Players[i].IsAI ? string.Format("\"{0}\"", (Model.Players[i] as ChessMaker.Models.AIDifficultyModel).InternalName) : Model.Players[i].IsLocal ? "true" : "false")
            }
        ]
    );
</script>
}
