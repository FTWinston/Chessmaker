@model ChessMaker.Models.GamePlayModel

@{
    ViewBag.Title = Model.Mode + " game: " + Model.Name;
    ViewBag.MinimalLayout = true;
}

<div id="main">

</div>

<div id="sidebar">
    <div class="section ui-widget ui-corner-all">
        <h3 id="nextMove">Initializing</h3>
        <div id="wait">Please wait...</div>
        <div id="moveHistory" class="sideList"></div>
    </div>
    <div id="captureSection" class="section ui-widget ui-corner-all">
        <h3>Captured</h3>
        <svg id="captured" class="pieceList sideList"></svg>
    </div>
    <div id="heldSection" class="section ui-widget ui-corner-all">
        <h3>Held</h3>
        <svg id="held" class="pieceList sideList"></svg>
    </div>
</div>

@section css {
    @Styles.Render("~/Content/Game.css")
    @Styles.Render("~/Users/Theme")
}

@section scripts {
    @Scripts.Render("~/bundles/game")

    @if (Model.AIs != null) {
        for (var i = 0; i < Model.AIs.Length; i++) {
            var AI = Model.AIs[i];
            if (AI != null) {
                @Scripts.Render("~/Scripts/AI/" + AI.Filename);
            }
        }
    }

    <script type="text/javascript">
    console.time('load');
    @if (Model.AIs != null) {
        @:var AIs = [
        @: @(Model.AIs[0] == null ? "null" : Model.AIs[0].Init)
        for (var i = 1; i < Model.AIs.Length; i++) {
            @:, @(Model.AIs[i] == null ? "null" : Model.AIs[i].Init)
        }
        @:];
    }
    $.ajax({
        type: "GET",
        url: "@(Model.Version.HasValue ? Url.Action("Definition", new { id = Model.Tag, version = Model.Version.Value }) : Url.Action("Definition", new { id = Model.Tag }))",
        dataType: "xml",
        success: loadDefinition
    });
    </script>
}
